planning_task:
  description: >
    Take the user's input `{goal}` and produce:
      - An array `agents` of agent names & roles
      - An array `tasks` mapping each agent to their responsibilities
  expected_output: >
    After deciding what agents and tasks are needed, return all the functionality in the syntax: {syntax}
    and wrap each file in a ```file:<relative/path>``` code block exactly like this:

    ```file:src/<your_project_name>/main.py
    #!/usr/bin/env python
    import sys
    ...
    ```
    ```file:src/<your_project_name>/crew.py
    from crewai import Agent, Crew, Process, Task
    ...
    ```
    ```file:src/<your_project_name>/config/agents.yaml
    planner:
      role: Goal Planner Agent
      ...
    ```
    ```file:src/<your_project_name>/config/tasks.yaml
    planning_task:
      description: ...
      ...
    ```
  agent: planner

write_files_task:
  description: >
    Use the FileWriteTool to extract and materialize all `file:<path>` blocks from
    planner output (available as input) into actual project files.
    You may pass `base_dir` input to define the root folder
    where files should be created: {base_dir}
  expected_output: >
    JSON manifest:
      - created_files: list of paths written
      - errors: list of any errors encountered
  agent: file_creator
